@{
  
    ViewData["Title"] = "Items";
}
@model ThothBase.PagedList<QuoteItemExDTO>

 <div class="row">
            <div class="container">
                 <nav class="nav nav-pills flex-column flex-sm-row">
                     @if(@Model.AllItems == false)
                     {
                        <a class="flex-sm-fill text-sm-center nav-link shownew active" href="@Url.Action("NewItems","Home", new{ @PageNumber = @Model.CurrentPage, @NewOnly = 1})">New Items</a>
                        <a class="flex-sm-fill text-sm-center nav-link showall" href="@Url.Action("NewItems","Home", new{ @PageNumber = @Model.CurrentPage, @NewOnly = 0})">All Items</a>   
                     }
                     else
                     {
                        <a class="flex-sm-fill text-sm-center nav-link shownew" href="@Url.Action("NewItems","Home", new{ @PageNumber = @Model.CurrentPage, @NewOnly = 1})">New Items</a>
                        <a class="flex-sm-fill text-sm-center nav-link showall active" href="@Url.Action("NewItems","Home", new{ @PageNumber = @Model.CurrentPage, @NewOnly = 0})">All Items</a>
                     }
                    <a class="flex-sm-fill text-sm-center nav-link addrow" asp-controller="Details" asp-action="Add">Add New</a>
                </nav>
            </div>
     </div>
<div class="text-center">
    <table class="table table-hover defmargin">
                        <thead>
                            <tr>
                                <th scope="col">Id</th>
                                <th scope="col">Primary Text</th>
                                <th scope="col">Secondary Text</th>
                                <th scope="col">Author</th>
                                <th scope="col">Post Date</th>
                                <th scope="col">IsVisible</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                        
                        <tbody class="records">
                            @if (Model != null)
                                @foreach (var item in Model)
                                {
                                    <tr>
                                         <td>@item.Id</td>
                                         <td>@item.PrimaryText</td>
                                         <td>@item.SecondaryText</td>
                                         <td>@item.Author</td>
                                         <td>@item.PostTime</td>
                                         <td>@item.IsVisible</td>
                                         <td>@Html.ActionLink("Approve", "Approve","Details", new{id=item.Id})|
                                             @Html.ActionLink("Edit", "Edit", "Details",new{id=item.Id}) |
                                             @Html.ActionLink("Delete", "Delete","Details", new{id=item.Id})</td> 
                                    </tr>
                                }
                        </tbody>
      
    </table> 
      @if (Model != null)
      {
            <div class="row">
                <div class="container">
                    <nav aria-label="...">
                        <ul class="pagination justify-content-end">
                        @if (Model.HasPrevious)
                        {
                                <li class="page-item prev">
                                    <a class="page-link" href="@Url.Action("NewItems","Home", new{ @PageNumber = Math.Max(1, @Model.CurrentPage-1)})"  tabindex="-1" aria-disabled="true">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                            </li>   
                        }
                        <li class="page-item current" aria-current="page">
                            <a class="page-link" data-pageNumber="1" href="#">
                                <span>@Model.CurrentPage from @Model.TotalPages</span>
                            </a>
                        </li>
                        @if (Model.HasNext)
                        {
                            <li class="page-item next">
                                      <a class="page-link" href="@Url.Action("NewItems","Home", new{ @PageNumber = Math.Min(@Model.TotalCount,  @Model.CurrentPage+1)})"  tabindex="-1" aria-disabled="true">
                                            <span aria-hidden="true">&raquo;</span>
                                      </a>
                            </li>
                        }
                        </ul>
                    </nav>
                </div>
            </div> 
        }                
</div>
